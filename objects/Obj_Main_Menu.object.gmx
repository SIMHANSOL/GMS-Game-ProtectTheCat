<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 변수 선언.
main_ui_menu_check = false; // 화면을 표기해야 하는지 확인합니다.

// 스크롤 애니메이션을 위한 변수입니다.
main_ui_x_scroll = 0;

main_ui_line_width = 240;
main_ui_line_height = 720;
main_ui_line_x = (view_xview[0] + 0);
main_ui_line_y = (view_yview[0] + 0);

main_ui_box_num = 5;
main_ui_box_width = sprite_get_width(Spr_Main_Ui_Box);
main_ui_box_height = sprite_get_height(Spr_Main_Ui_Box);
main_ui_box_width_2 = sprite_get_width(Spr_World_Ui_Box);
main_ui_box_height_2 = sprite_get_height(Spr_World_Ui_Box);
main_ui_box_x = (view_xview[0] + 5);
main_ui_box_y = (view_yview[0] + 80);
main_ui_box_y_last = view_hview[0] - (20 + main_ui_box_height);
main_ui_box_left_speed = 5;
main_ui_box_right_speed = 10;

// Game Chapter Value.
start_button_width = sprite_get_width(Spr_Stage_Stat);
start_button_height = sprite_get_height(Spr_Stage_Stat);
start_button_x = view_wview[0] - (start_button_width + 20);
start_button_y = view_hview[0] - (start_button_height + 20);
alpha = 0;
stage_select = -1;

// here y.
here_check = false;
here_y = 0;

fade_switch = false;
fade_alpha = 1;

var _i = 0;
repeat(main_ui_box_num)
{
    main_ui_box_click[_i] = false;
    main_ui_box_speed[_i] = 0;
    _i ++;
}

// 전용 폰트.
spr_font = font_add_sprite_ext(Spr_Font_A, "0123456789", false, -10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 기본 메뉴, 화면에 표기.
var _plus = 6;
draw_sprite(Spr_Main_Background, 0, main_ui_line_width + _plus, 0);

if main_ui_menu == 0
{
    main_ui_box_num = 2;
    var _mx = mouse_x; var _my = mouse_y;
    var _mbc_L = mouse_check_button(mb_left);
    var _mbr_L = mouse_check_button_released(mb_left);

    draw_sprite(Spr_Main_Ui_Box_Background, 0, main_ui_line_x, main_ui_line_y);
    
    // 버튼 초기화.
    if _mbc_L = true and main_ui_menu == main_ui_menu_return
    {
        for(var _i = 0; _i &lt; main_ui_box_num; _i ++;)
        {main_ui_box_click[_i] = false;}
    }
    
    //
    for(var _i = 0; _i &lt; main_ui_box_num; _i ++;)
    {
        // 좌표 설정.
        if _i != (main_ui_box_num - 1)
        {
            var _x = main_ui_box_x - main_ui_x_scroll;
            var _y = view_yview[0] + (main_ui_box_height * 2);
        }
        else
        {
            var _x = main_ui_box_x - main_ui_x_scroll;
            var _y = view_hview[0] - (main_ui_box_height * 3);
        }
        
        // 박스 표기.
        draw_set_colour(c_gray);
        draw_sprite(Spr_Main_Ui_Box, _i, _x, _y);
        
        if _mbc_L = true and main_ui_menu == main_ui_menu_return
        and _mx &gt; _x and _mx &lt; _x + main_ui_box_width
        and _my &gt; _y and _my &lt; _y + main_ui_box_height
        {
            main_ui_box_click[_i] = true;
            if main_ui_box_speed[_i] &lt; main_ui_box_left_speed {main_ui_box_speed[_i] = main_ui_box_left_speed;}
        }
        
        if main_ui_box_click[_i] = true
        {
            if main_ui_box_speed[_i] &lt; main_ui_box_width
            {main_ui_box_speed[_i] += (main_ui_box_speed[_i] / main_ui_box_left_speed);}
        }
        else
        {
            if main_ui_box_speed[_i] &gt; 0
            {main_ui_box_speed[_i] -= (main_ui_box_speed[_i] / main_ui_box_right_speed);}
        }
        draw_set_colour(c_white);
        draw_sprite_part_ext(Spr_Main_Ui_Box_White, 0, 0, 0, main_ui_box_width * (main_ui_box_speed[_i] / main_ui_box_width), main_ui_box_height, _x + main_ui_box_width, _y, (-image_xscale), image_yscale, draw_get_colour(), draw_get_alpha());
        
        // 클릭 반영.
        if _mbr_L = true and main_ui_menu == main_ui_menu_return
        and _mx &gt; _x and _mx &lt; _x + main_ui_box_width
        and _my &gt; _y and _my &lt; _y + main_ui_box_height
        {
            switch(_i)
            {
                case 0: main_ui_menu_return = 1; select = -1; select_return = -1; break;
                case 1: main_ui_menu_return = 2; break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 챕터 메뉴, 화면에 표기.
if main_ui_menu == 1
{
    main_ui_box_num = 3;
    var _mx = mouse_x; var _my = mouse_y;
    var _mbc_L = mouse_check_button(mb_left);
    var _mbr_L = mouse_check_button_released(mb_left);
    
    var _plus = 6; draw_set_alpha(alpha);
    switch(select)
    {
        case 0: draw_sprite(Spr_World_1_Background, 0, main_ui_line_width + _plus, 0); break;
        case 1: draw_sprite(Spr_World_1_Background, 0, main_ui_line_width + _plus, 0); break;
        case 2: draw_sprite(Spr_World_1_Background, 0, main_ui_line_width + _plus, 0); break;
    }
    
    draw_set_alpha(1);
    draw_sprite(Spr_Main_Ui_Box_Background, 0, main_ui_line_x, main_ui_line_y);
    
    // 버튼 초기화.
    if _mbc_L = true and main_ui_menu == main_ui_menu_return and fade_switch == false
    and _mx &lt; main_ui_box_width
    {
        for(var _i = 0; _i &lt; main_ui_box_num; _i ++;)
        {main_ui_box_click[_i] = false; select_return = -1;}
    }

    //
    var _check = false;
    for(var _i = 0; _i &lt; main_ui_box_num; _i ++;)
    {
        // 좌표 설정.
        var _x = main_ui_box_x - main_ui_x_scroll;
        var _y = view_yview[0] + 160 + (_i * (main_ui_box_height + 40));

        // 박스 표기.
        draw_set_colour(c_gray);
        draw_sprite(Spr_World_Ui_Box, _i, _x, _y);
        
        if _mbc_L = true and main_ui_menu == main_ui_menu_return and fade_switch == false
        and _mx &gt; _x and _mx &lt; _x + main_ui_box_width_2
        and _my &gt; _y and _my &lt; _y + main_ui_box_height_2
        {
            main_ui_box_click[_i] = true;
            if main_ui_box_speed[_i] &lt; main_ui_box_left_speed {main_ui_box_speed[_i] = main_ui_box_left_speed;}
        }
        
        if main_ui_box_click[_i] = true
        {
            if main_ui_box_speed[_i] &lt; main_ui_box_width
            {main_ui_box_speed[_i] += (main_ui_box_speed[_i] / main_ui_box_left_speed);}
            _check = true;
        }
        else
        {
            if main_ui_box_speed[_i] &gt; 0
            {main_ui_box_speed[_i] -= (main_ui_box_speed[_i] / main_ui_box_right_speed);}
        }
        draw_set_colour(c_white);
        draw_sprite_part_ext(Spr_World_Ui_Box_White, 0, 0, 0, main_ui_box_width * (main_ui_box_speed[_i] / main_ui_box_width), main_ui_box_height + 20, _x + main_ui_box_width, _y, (-image_xscale), image_yscale, draw_get_colour(), draw_get_alpha());
        
        // 클릭 반영.
        if _mbr_L = true and main_ui_menu == main_ui_menu_return and fade_switch == false
        and _mx &gt; _x and _mx &lt; _x + main_ui_box_width_2
        and _my &gt; _y and _my &lt; _y + main_ui_box_height_2
        {
            //alpha = 0;
            switch(_i)
            {
                case 0: select_return = 0; break;
                case 1: select_return = 1; break;
                case 2: select_return = 2; break;
            }
        }
    }
    
    if select != -1 and _check == false and main_ui_menu == main_ui_menu_return and fade_switch == false
    {
        main_ui_box_click[select] = true;
        if main_ui_box_speed[select] &lt; main_ui_box_left_speed {main_ui_box_speed[select] = main_ui_box_left_speed;}
    }
    
    // 스테이지 버튼 표시.
    if select != -1
    {
        var _slot = 0;
        
        // 클릭 반영.
        for(var _i = 0; _i &lt; 2; _i ++;) // 세로.
        {
            for(var _k = 0; _k &lt; 5; _k ++;) // 가로.
            {
                var _x = (view_xview[0] + 346) + (_k * (sprite_get_width(Spr_Stage_Stat) + 40));
                var _y = (view_yview[0] + 130) + (_i * (sprite_get_height(Spr_Stage_Stat) + 80));
                var _stat = global.stage_stat[select, _slot];
                var _click = 1;
                
                if _mbc_L = true and _stat != 0 and main_ui_menu == main_ui_menu_return and fade_switch == false
                and _mx &gt; _x and _mx &lt; _x + start_button_width
                and _my &gt; _y and _my &lt; _y + start_button_height
                {_click = 0.96;};
                draw_sprite_ext(Spr_Stage_Stat, _stat, _x, _y, 1, _click, 0, c_white, alpha);
                if _stat == 4 {draw_sprite_ext(Spr_Here, 0, _x, (_y - 80) + here_y, 1, 1, 0, c_white, alpha);}
                
                draw_set_valign(fa_center);
                draw_set_halign(fa_center);
                draw_set_font(spr_font);
                draw_text_transformed_colour(_x + (start_button_width / 2), _y + 20 + (start_button_height / 2), _slot + 1, 1, _click, 0, c_white, c_white, c_white, c_white, alpha);
                
                // 클릭 반영.
                if _mbr_L = true and _stat != 0 and main_ui_menu == main_ui_menu_return and fade_switch == false
                and _mx &gt; _x and _mx &lt; _x + start_button_width
                and _my &gt; _y and _my &lt; _y + start_button_height
                {stage_select = _slot; fade_switch = true; main_ui_menu_return = -1;}
                _slot ++;
            }
        }
    }
    
    if select != select_return
    {
        if alpha &lt;= 0
        {alpha = 0; select = select_return;}
        else {alpha -= 0.1;}
    }
    
    else if select == select_return
    {
        if alpha &gt;= 1
        {alpha = 1;}
        else {alpha += 0.05;}
    }
    draw_set_alpha(1);
    
    if here_check == false
    {
        if here_y &lt; 10
        {here_y += (11 - here_y) / 20;}
        else {here_check = true;}
    }
    
    if here_check == true
    {
        if here_y &gt; 0
        {here_y -= (11 - here_y) / 20;;}
        else {here_check = false;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 게임 종료.
if main_ui_menu == 2
{game_end();}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 페이드 인 아웃. (스테이지 이동.)
var _speed = 0.01;

if fade_switch = false
{
    if fade_alpha &gt; 0 {fade_alpha -= _speed;}
    else {fade_alpha = 0;}
}

else if fade_switch = true
{
    if fade_alpha &lt; 1 {fade_alpha += _speed;}
    else {fade_alpha = 1;}
}

draw_set_alpha(fade_alpha);
draw_set_colour(c_black);
draw_rectangle(view_xview[0], view_yview[0], view_wview[0], view_hview[0], 0);
draw_set_alpha(1);

// 룸 이동.
if main_ui_menu_return == -1
{
    if fade_alpha &gt;= 1
    {
        global.select_world = select;
        global.select_stage = stage_select;
        
        switch(select)
        {
            case 0: // 0 월드.
            {
                switch(stage_select)
                {
                    case 0: room_goto(Roo_World_1_Stage_1); break; // 0 스테이지.
                    case 1: room_goto(Roo_World_1_Stage_2); break; // 1 스테이지.
                    case 2: room_goto(Roo_World_1_Stage_3); break; // 2 스테이지.
                    case 3: room_goto(Roo_World_1_Stage_4); break; // 3 스테이지.
                    case 4: room_goto(Roo_World_1_Stage_5); break; // 4 스테이지.
                    case 5: room_goto(Roo_World_1_Stage_6); break; // 5 스테이지.
                    case 6: room_goto(Roo_World_1_Stage_7); break; // 6 스테이지.
                    case 7: room_goto(Roo_World_1_Stage_8); break; // 7 스테이지.
                    case 8: room_goto(Roo_World_1_Stage_9); break; // 8 스테이지.
                    case 9: room_goto(Roo_World_1_Stage_10); break; // 9 스테이지.
                }
                break;
            }
            
            case 1: // 1 월드.
            {
                switch(stage_select)
                {
                    case 0: room_goto(Roo_World_2_Stage_1); break; // 0 스테이지.
                    case 1: room_goto(Roo_World_2_Stage_2); break; // 1 스테이지.
                    case 2: room_goto(Roo_World_2_Stage_3); break; // 2 스테이지.
                    case 3: room_goto(Roo_World_2_Stage_4); break; // 3 스테이지.
                    case 4: room_goto(Roo_World_2_Stage_5); break; // 4 스테이지.
                    case 5: room_goto(Roo_World_2_Stage_6); break; // 5 스테이지.
                    case 6: room_goto(Roo_World_2_Stage_7); break; // 6 스테이지.
                    case 7: room_goto(Roo_World_2_Stage_8); break; // 7 스테이지.
                    case 8: room_goto(Roo_World_2_Stage_9); break; // 8 스테이지.
                    case 9: room_goto(Roo_World_2_Stage_10); break; // 9 스테이지.
                }
                break;
            }
            
            case 2: // 2 월드.
            {
                switch(stage_select)
                {
                    case 0: room_goto(Roo_World_3_Stage_1); break; // 0 스테이지.
                    case 1: room_goto(Roo_World_2_Stage_2); break; // 1 스테이지.
                    case 2: room_goto(Roo_World_2_Stage_3); break; // 2 스테이지.
                    case 3: room_goto(Roo_World_2_Stage_4); break; // 3 스테이지.
                    case 4: room_goto(Roo_World_2_Stage_5); break; // 4 스테이지.
                    case 5: room_goto(Roo_World_2_Stage_6); break; // 5 스테이지.
                    case 6: room_goto(Roo_World_2_Stage_7); break; // 6 스테이지.
                    case 7: room_goto(Roo_World_2_Stage_8); break; // 7 스테이지.
                    case 8: room_goto(Roo_World_2_Stage_9); break; // 8 스테이지.
                    case 9: room_goto(Roo_World_2_Stage_10); break; // 9 스테이지.
                }
                break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 전체 관리.

// 스크롤 애니메이션.
var _speed = 10;

if main_ui_menu_check = true
{
    if main_ui_x_scroll &gt; 0
    {main_ui_x_scroll -= (main_ui_x_scroll / _speed);}
    else
    {
        main_ui_x_scroll = 0;
        main_ui_menu_check = false;
    }
}

if main_ui_menu != main_ui_menu_return
{
    main_ui_menu_check = false;
    if main_ui_x_scroll &lt; 1 {main_ui_x_scroll = 1;}
    
    if main_ui_x_scroll &lt; main_ui_box_width
    {main_ui_x_scroll += (main_ui_x_scroll / _speed);}
    else 
    {
        for(var _i = 0; _i &lt; main_ui_box_num; _i ++;)
        {
            main_ui_box_click[_i] = false;
            main_ui_box_speed[_i] = 0;
        }
        main_ui_x_scroll = main_ui_box_width;
        
        if fade_switch = false
        {main_ui_menu = main_ui_menu_return;}
        main_ui_menu_check = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 백 버튼.
if select != -1
{
    for(var _i = 0; _i &lt; main_ui_box_num; _i ++;)
    {main_ui_box_click[_i] = false; select_return = -1;}
}
else if main_ui_menu != 0
{
    main_ui_menu_return = 0;
}
else
{
    main_ui_menu_return = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
