<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
Create_Item(global.select_world, global.select_stage);

global.star = 3;
global.game_stat = 0;
global.game_start = false;

//
star_num = 0;
dis_x = 0;
dis_y = 0;
dis_num = 0;
dis_check = false;
dis_alpha = 1;

//
re_width = sprite_get_width(Spr_Result);
re_height = sprite_get_height(Spr_Result);
re_x = view_wview[0] / 2;
re_y = view_yview[0] - (re_height / 2);
re_button_width = sprite_get_width(Spr_Re_Button);
re_button_height = sprite_get_height(Spr_Re_Button);
re_size[0] = 1;
re_size[1] = 1;
re_size[2] = 1;
re_alpha = 0;

//
fade_switch = false;
fade_alpha = 1;

spr_font = font_add_sprite_ext(Spr_Font_B, "0123456789", false, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Start.
with(Obj_Virus)
{
    var _target = Obj_Target;
    if instance_exists(_target)
    {
        if stop == false
        {
            var _dir = point_direction(x, y, _target.x, _target.y);
            phy_rotation = _dir ;
            if phy_rotation &gt; 90 and phy_rotation &lt; 270
            {image_yscale = -1;} 
            else if phy_rotation &gt; 270 and phy_rotation != 90
            {image_yscale = 1;}
        }
    }
}

if global.game_start == true
{
    global.game_time_sec -= 1.65;
    if global.game_time_sec &lt;= 0
    {
        global.game_time_min --;
        global.game_time_sec = 99;
    }
    
    if global.game_time_min &lt; 0
    {
        global.game_time_min = 0;
        global.game_time_sec = 0;
        
        // Win.
        global.game_stat = 1;
    }
    
    with(Obj_Virus)
    {
        var _target = Obj_Target;
        if instance_exists(_target)
        {
            if stop == false
            {
                var _dir = point_direction(x, y, _target.x, _target.y);
                physics_apply_impulse(phy_position_x, phy_position_y, lengthdir_x(move_speed, _dir), lengthdir_y(move_speed, _dir));
            }
        
            if place_meeting(x, y, _target)
            {
                // Lose.
                global.game_stat = 2;
            }
        }
    }
}

if global.game_stat != 0
{global.game_start = false;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 메인 드로우.
draw_sprite(Spr_Item_Ui, 0, global.system_ui_x, global.system_ui_y);

//
var _mx = mouse_x; var _my = mouse_y;
var _mbc_L = mouse_check_button(mb_left);
var _mbr_L = mouse_check_button_released(mb_left);

//
if _mbr_L == true
and _mx &gt; global.system_button_play_x and _mx &lt; global.system_button_play_x + global.system_button_width
and _my &gt; global.system_button_play_y and _my &lt; global.system_button_play_y + global.system_button_height
{
    if global.game_stat == 0
    {
        if global.game_start == false
        {
            with(Obj_Block) {phy_active = true;}
            global.game_start = true;
        }
        
        else
        {
            global.game_start = false; global.game_stat = 0; room_restart();
        }
    }
}

//
if _mbr_L == true
and _mx &gt; global.system_button_return_x and _mx &lt; global.system_button_return_x + global.system_button_width
and _my &gt; global.system_button_return_y and _my &lt; global.system_button_return_y + global.system_button_height
{
    select = global.select_world; select_return = global.select_world;
    main_ui_menu = 1; main_ui_menu_return = 1; room_goto(Roo_Main_Menu);
}

//
if global.game_start = false
{draw_sprite(Spr_Game_Button, 0, global.system_button_play_x, global.system_button_play_y);}
else {draw_sprite(Spr_Game_Button, 1, global.system_button_play_x, global.system_button_play_y);}
draw_sprite(Spr_Game_Button, 2, global.system_button_return_x, global.system_button_return_y);

//
draw_set_valign(fa_top); draw_set_halign(fa_center); 
draw_set_colour(c_white); draw_set_font(spr_font);
var _string_1 = string(global.game_time_min);
if string_length(_string_1) != 2 {_string_1 = string_insert("0", _string_1, 0);}
var _string_2 = string(floor(global.game_time_sec));
if string_length(_string_2) != 2 {_string_2 = string_insert("0", _string_2, 0);}
draw_sprite(Spr_Time, 0, global.system_text_x, global.system_text_y);
draw_text(global.system_text_x, global.system_text_y, string(_string_1) + " " + string(_string_2));

//
if global.system_ui_switch == true
{Draw_Item();}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 페이드 처리.
var _speed = 0.01;

if fade_switch = false
{
    if fade_alpha &gt; 0 {fade_alpha -= _speed;}
    else {fade_alpha = 0;}
}

else if fade_switch = true
{
    if fade_alpha &lt; 1 {fade_alpha += _speed;}
    else {fade_alpha = 1;}
}

draw_set_alpha(fade_alpha);
draw_set_colour(c_black);
draw_rectangle(view_xview[0], view_yview[0], view_wview[0], view_hview[0], 0);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 게임 결과.
draw_set_colour(c_black); draw_set_alpha(re_alpha);
draw_rectangle(view_xview[0], view_yview[0], view_wview[0], view_hview[0], 0);
draw_set_alpha(1);

if global.game_stat != 0
{
    if global.game_stat == 1 and dis_check == false
    {
        if global.star &lt;= 0
        {global.star = 1;}
        
        if global.stage_stat[global.select_world, global.select_stage] == 4
        {global.stage_stat[global.select_world, global.select_stage] = global.star;}
        
        if global.stage_stat[global.select_world, global.select_stage] &lt; global.star
        {global.stage_stat[global.select_world, global.select_stage] = global.star;}

        if global.select_stage != (global.stage_num - 1)
        {
            if global.stage_stat[global.select_world, global.select_stage + 1] == 0
            {global.stage_stat[global.select_world, global.select_stage + 1] = 4;}
        }
        
        else if global.select_world != (global.world_num - 1) and global.select_stage == (global.stage_num - 1)
        {
            if global.stage_stat[global.select_world + 1, 0] == 0
            {global.stage_stat[global.select_world + 1, 0] = 4;}
        }
        
        Save_Game();
        dis_check = true;
    }
    
    else if global.game_stat == 2
    {global.star = 0;}
    
    if re_alpha &lt; 0.6 {re_alpha += 0.02;}
    else {re_alpha = 0.6;}
    
    if re_y &lt; (view_hview[0] / 2) {re_y += ((view_hview[0] / 2) - re_y) / 20;}
    else {re_y = (view_hview[0] / 2);}
    
    draw_sprite(Spr_Result, global.star, re_x, re_y);
    
    var _re_1_x = re_x - 110;
    var _re_2_x = re_x;
    var _re_3_x = re_x + 110;
    var _re_y = re_y + 210;
    var _mx = mouse_x; var _my = mouse_y;
    var _mbc_L = mouse_check_button(mb_left);
    var _mbr_L = mouse_check_button_released(mb_left);
    
    draw_sprite_ext(Spr_Re_Button, 0, _re_1_x, _re_y, re_size[0], re_size[0], 0, c_white, 1);
    draw_sprite_ext(Spr_Re_Button, 1, _re_2_x, _re_y, re_size[1], re_size[1], 0, c_white, 1);
    draw_sprite_ext(Spr_Re_Button, 2, _re_3_x, _re_y, re_size[2], re_size[2], 0, c_white, 1);
    
    //
    if _mbc_L == true 
    and _mx &gt; _re_1_x - (re_button_width / 2) and _mx &lt; _re_1_x + (re_button_width / 2) 
    and _my &gt; _re_y - (re_button_height / 2) and _my &lt; _re_y + (re_button_height / 2)
    {
        re_size[0] = 0.95;
    }
    
    if _mbr_L == true 
    and _mx &gt; _re_1_x - (re_button_width / 2) and _mx &lt; _re_1_x + (re_button_width / 2) 
    and _my &gt; _re_y - (re_button_height / 2) and _my &lt; _re_y + (re_button_height / 2)
    {
        select = global.select_world; select_return = global.select_world;
        main_ui_menu = 1; main_ui_menu_return = 1; room_goto(Roo_Main_Menu);
    }
    
    //
    if _mbc_L == true 
    and _mx &gt; _re_2_x - (re_button_width / 2) and _mx &lt; _re_2_x + (re_button_width / 2) 
    and _my &gt; _re_y - (re_button_height / 2) and _my &lt; _re_y + (re_button_height / 2)
    {
        re_size[1] = 0.95;
    }
    
    if _mbr_L == true 
    and _mx &gt; _re_2_x - (re_button_width / 2) and _mx &lt; _re_2_x + (re_button_width / 2) 
    and _my &gt; _re_y - (re_button_height / 2) and _my &lt; _re_y + (re_button_height / 2)
    {
        global.game_start = false; global.game_stat = 0; global.star = 3; room_restart();
    }
    
    //
    if _mbc_L == true 
    and _mx &gt; _re_3_x - (re_button_width / 2) and _mx &lt; _re_3_x + (re_button_width / 2) 
    and _my &gt; _re_y - (re_button_height / 2) and _my &lt; _re_y + (re_button_height / 2)
    {
        re_size[2] = 0.95;
    }
    
    if _mbr_L == true 
    and _mx &gt; _re_3_x - (re_button_width / 2) and _mx &lt; _re_3_x + (re_button_width / 2) 
    and _my &gt; _re_y - (re_button_height / 2) and _my &lt; _re_y + (re_button_height / 2)
    {
        if global.game_stat == 1
        {
            global.game_start = false; global.game_stat = 0; 
            Next_Stage(global.select_world, global.select_stage);
        }
        
        else if global.select_stage != (global.stage_num - 1)
        {
            if global.stage_stat[global.select_world, global.select_stage + 1] &gt; 0 and global.stage_stat[global.select_world, global.select_stage + 1] &lt; 4
            {
                global.game_start = false; global.game_stat = 0; 
                Next_Stage(global.select_world, global.select_stage);
            }
        }
    }
    
    if _mbc_L != true
    {
        re_size[0] = 1;
        re_size[1] = 1;
        re_size[2] = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.game_stat = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
